# Global logging configuration
log4j.rootLogger=ERROR, stderr
log4j.logger.ibm=TRACE,stderr
log4j.additivity.ibm=false

#######################################################################
# Appender stderr is set to direct to the System.err output stream
# this allows the output to be viewed in the same place as all
# other messages generated by the system using System.err
#######################################################################
log4j.appender.stderr=org.apache.log4j.ConsoleAppender
log4j.appender.stderr.Target=System.err

#######################################################################
# Appender stderr uses PatternLayout to format the output
#######################################################################
log4j.appender.stderr.layout=org.apache.log4j.PatternLayout
log4j.appender.stderr.layout.ConversionPattern=[%d] %c - %m%n

#######################################################################
# This example appender can be used to dump the logged messages into
# a rolling log file that can be configured to reach a certain max
# size. The previously logged data can be backed up.
#
# RollingLog uses the FileAppender which outputs to Processing.log
#log4j.appender.RollingLog=org.apache.log4j.RollingFileAppender
#log4j.appender.RollingLog.File=Processing.log
#log4j.appender.RollingLog.MaxFileSize=1000KB
#log4j.appender.RollingLog.MaxBackupIndex=9
# 
# RollingLog uses this PatternLayout to format the data
#log4j.appender.R.layout=org.apache.log4j.PatternLayout
#log4j.appender.R.layout.ConversionPattern=%d [%t] %-5p %c %x - %m%n
#######################################################################
